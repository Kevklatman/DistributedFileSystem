apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dfs-storage-node
  labels:
    app: dfs-storage-node
    app.kubernetes.io/name: dfs-storage-node
    app.kubernetes.io/part-of: distributed-file-system
spec:
  serviceName: dfs-storage-service
  replicas: 3
  selector:
    matchLabels:
      app: dfs-storage-node
  template:
    metadata:
      labels:
        app: dfs-storage-node
        app.kubernetes.io/name: dfs-storage-node
        app.kubernetes.io/part-of: distributed-file-system
    spec:
      serviceAccountName: storage-node-sa
      containers:
      - name: storage-node
        image: dfs-storage-node:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
        - containerPort: 3260
          name: iscsi
        - containerPort: 2049
          name: nfs
        - containerPort: 445
          name: cifs
        - containerPort: 9091
          name: metrics
        volumeMounts:
        - name: data
          mountPath: /data
        - name: config
          mountPath: /etc/dfs
        env:
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        envFrom:
        - configMapRef:
            name: dfs-config
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        securityContext:
          privileged: true  # Required for iSCSI, NFS, and CIFS
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 15
          periodSeconds: 5
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: dfs-storage-data
      - name: config
        configMap:
          name: dfs-config
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: dfs-storage-pdb
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: dfs-storage-node
