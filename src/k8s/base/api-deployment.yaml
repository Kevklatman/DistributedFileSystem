apiVersion: v1
kind: ConfigMap
metadata:
  name: dfs-api-files
data:
  requirements.txt: |
    flask==2.0.1
    flask-cors==4.0.0
    flask-restx==1.1.0
    gunicorn==21.2.0
    python-dotenv==1.0.0
    xmltodict==0.13.0
    werkzeug==2.0.3
    kubernetes==29.0.0
    aiohttp==3.9.1
    asyncio==3.4.3
    prometheus-client==0.17.1
    psutil==5.9.6
    pytest>=7.4.0
    pytest-mock>=3.11.1
    matplotlib>=3.7.0
    numpy>=1.24.0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dfs-api
  labels:
    app: dfs-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: dfs-api
  template:
    metadata:
      labels:
        app: dfs-api
    spec:
      containers:
      - name: dfs-api
        image: dfs-api:0b4c4a8ebcd7072a218dd635561d230aedd44d745ddb2de036bdafbf824d148b
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
        command: ["python"]
        args: ["-m", "src.api.app"]
        env:
        - name: PYTHONPATH
          value: /app
        - name: FLASK_APP
          value: src/api/app.py
        - name: FLASK_ENV
          value: production
        volumeMounts:
        - name: storage-volume
          mountPath: /app/storage
      volumes:
      - name: storage-volume
        emptyDir: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dfs-storage-claim
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
