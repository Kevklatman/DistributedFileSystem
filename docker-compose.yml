name: distributed-file-system

services:
  # Core nodes
  dfs_core:
    build: .
    deploy:
      mode: replicated
      replicas: 3
      labels:
        - "node_type=core"
    environment:
      - NODE_TYPE=core
      - QUORUM_SIZE=2
    ports:
      - "8000"
    volumes:
      - type: volume
        source: dfs_core_data
        target: /app/data
    networks:
      - dfs_network

  # Edge nodes
  dfs_edge:
    build: .
    deploy:
      mode: replicated
      replicas: 2
      labels:
        - "node_type=edge"
    environment:
      - NODE_TYPE=edge
      - DEVICE_TYPE={{.Task.Slot}}  # Will be 1=mobile, 2=iot
    ports:
      - "8000"
    volumes:
      - type: volume
        source: dfs_edge_data
        target: /app/data
    networks:
      - dfs_network

  # Load testing and monitoring
  monitoring:
    build:
      context: .
      dockerfile: src/monitoring/Dockerfile
    ports:
      - "5001:5000"
    volumes:
      - ./config:/app/config
      - ./storage:/app/storage
      - ~/.kube/config:/root/.kube/config
    deploy:
      mode: replicated
      replicas: 1
    networks:
      - dfs_network

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    deploy:
      mode: replicated
      replicas: 1
    networks:
      - dfs_network

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/etc/grafana/dashboards
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - dfs_network

  locust:
    build:
      context: .
      dockerfile: src/loadtest/Dockerfile
    ports:
      - "8089:8089"
      - "9100:9100"
    deploy:
      mode: replicated
      replicas: 1
    networks:
      - dfs_network

networks:
  dfs_network:
    driver: overlay
    attachable: true

volumes:
  dfs_core_data:
    driver: local
  dfs_edge_data:
    driver: local
